[{"/opt/lampp/htdocs/carcrm-react/src/index.js":"1","/opt/lampp/htdocs/carcrm-react/src/App.js":"2","/opt/lampp/htdocs/carcrm-react/src/Routes.js":"3","/opt/lampp/htdocs/carcrm-react/src/store/store.js":"4","/opt/lampp/htdocs/carcrm-react/src/store/reducers/rootReducer.js":"5","/opt/lampp/htdocs/carcrm-react/src/store/reducers/loading.reducer.js":"6","/opt/lampp/htdocs/carcrm-react/src/store/actions/loading.action.js":"7","/opt/lampp/htdocs/carcrm-react/src/view/components/index.js":"8","/opt/lampp/htdocs/carcrm-react/src/view/components/Loading.js":"9","/opt/lampp/htdocs/carcrm-react/src/store/reducers/notify.reducer.js":"10","/opt/lampp/htdocs/carcrm-react/src/store/actions/notify.action.js":"11","/opt/lampp/htdocs/carcrm-react/src/view/components/Notify.js":"12","/opt/lampp/htdocs/carcrm-react/src/store/reducers/alert.reducer.js":"13","/opt/lampp/htdocs/carcrm-react/src/view/components/Alert.js":"14","/opt/lampp/htdocs/carcrm-react/src/store/actions/alert.action.js":"15","/opt/lampp/htdocs/carcrm-react/src/store/reducers/alertr.reducer.js":"16","/opt/lampp/htdocs/carcrm-react/src/store/actions/alertr.action.js":"17","/opt/lampp/htdocs/carcrm-react/src/view/components/Alertr.js":"18","/opt/lampp/htdocs/carcrm-react/src/view/components/Confirm.js":"19","/opt/lampp/htdocs/carcrm-react/src/view/auth/index.js":"20","/opt/lampp/htdocs/carcrm-react/src/store/reducers/auth.reducer.js":"21","/opt/lampp/htdocs/carcrm-react/src/store/actions/auth.action.js":"22","/opt/lampp/htdocs/carcrm-react/src/config/Http.js":"23","/opt/lampp/htdocs/carcrm-react/src/config/App.js":"24"},{"size":199,"mtime":1611105466551,"results":"25","hashOfConfig":"26"},{"size":1746,"mtime":1612263522667,"results":"27","hashOfConfig":"26"},{"size":960,"mtime":1613438196649,"results":"28","hashOfConfig":"26"},{"size":251,"mtime":1611138742450,"results":"29","hashOfConfig":"26"},{"size":561,"mtime":1613385037190,"results":"30","hashOfConfig":"26"},{"size":865,"mtime":1611515850491,"results":"31","hashOfConfig":"26"},{"size":494,"mtime":1612263535564,"results":"32","hashOfConfig":"26"},{"size":279,"mtime":1612118156068,"results":"33","hashOfConfig":"26"},{"size":1894,"mtime":1612118807320,"results":"34","hashOfConfig":"26"},{"size":722,"mtime":1611950500268,"results":"35","hashOfConfig":"26"},{"size":195,"mtime":1612263535592,"results":"36","hashOfConfig":"26"},{"size":1798,"mtime":1611770578831,"results":"37","hashOfConfig":"26"},{"size":345,"mtime":1611960356844,"results":"38","hashOfConfig":"26"},{"size":1757,"mtime":1612271117383,"results":"39","hashOfConfig":"26"},{"size":148,"mtime":1611785602036,"results":"40","hashOfConfig":"26"},{"size":344,"mtime":1612116946767,"results":"41","hashOfConfig":"26"},{"size":229,"mtime":1611960486444,"results":"42","hashOfConfig":"26"},{"size":1398,"mtime":1612118797376,"results":"43","hashOfConfig":"26"},{"size":1230,"mtime":1612118676229,"results":"44","hashOfConfig":"26"},{"size":2765,"mtime":1613438036994,"results":"45","hashOfConfig":"26"},{"size":668,"mtime":1613430583648,"results":"46","hashOfConfig":"26"},{"size":2364,"mtime":1613435227219,"results":"47","hashOfConfig":"26"},{"size":298,"mtime":1612314343672,"results":"48","hashOfConfig":"26"},{"size":170,"mtime":1612313704212,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"14s8bxz",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/opt/lampp/htdocs/carcrm-react/src/index.js",[],["105","106"],"/opt/lampp/htdocs/carcrm-react/src/App.js",["107"],"import React from 'react';\n\n//configuracao do redux\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\n//faço a mudança do tema em app para toda a aplicação\nimport { createMuiTheme , ThemeProvider } from '@material-ui/core/styles';\n//o import no core tem a possibilidade de importar outros componentes juntamente\n//import { Button, TextField } from '@material-ui/core';\n\nimport { blue } from '@material-ui/core/colors';\n\n\n//importando o bootstrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//global css\nimport './global.css'\n\n//importando as rotas \nimport Routes from './Routes';\n\n\n//importando um componente\n//fazendo dessa forma o react automaticamente vai pegar o arquivo index\n//no arquivo index dentro da pasta components foi importado e exportado\n//todos os componentes da aplicação\nimport { Loading, Notify, Alert, Alertr, Confirm} from './view/components';\n\n\n//criando constante para definir cor do tema\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500]\n    },\n  },\n  //Props serve para modificar a propriedade padrão\n  //o nome do componente text field esta na biblioteca material ui como nome muitextfield\n  props: {\n    MuiTextField: {\n       variant: 'outlined',\n       fullWidth: true\n    },\n    MuiSelect: {\n      variant: 'outlined',\n      fullWidth: true\n   }\n  }\n});\n\n//o segundo parentese é o return do react\nconst App = () => (\n  <Provider store={store}>\n  <ThemeProvider theme={theme}>\n      {/* <Confirm\n        open={true}\n        onClose={() => alert('close')}\n        onConfirm={() => alert('confirm')}\n      /> */}\n      <Alertr/>\n      <Alert/>\n      <Notify/>\n      <Loading/>\n      <Routes/>\n  </ThemeProvider>\n  </Provider>\n)\n\nexport default App;","/opt/lampp/htdocs/carcrm-react/src/Routes.js",["108"],"/opt/lampp/htdocs/carcrm-react/src/store/store.js",[],"/opt/lampp/htdocs/carcrm-react/src/store/reducers/rootReducer.js",[],"/opt/lampp/htdocs/carcrm-react/src/store/reducers/loading.reducer.js",["109"],"//NO REDUCER MUDAMOS O ESTADO DO COMPONENTE \n//OBS TODA VEZ QUE CRIAMOS UM  REDUCER O ADICIONAMOS NA rootReducer\n\n//importando a const actionTypes desse path com os seus respectivos action types EX CHANGE\nimport { actionTypes } from '../actions/loading.action'\n\n//se digitar rxr ele cria o que tem abaixo\n\n//constante estado inicial do componente\nconst initialState = {\n  open: false,\n  msg: 'Carregando...'  //mensagem default\n}\n\n//quando dou export default posso usar qualquer nome ao importar\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n         //estou usando a action type change por constantes \n         //importada do arquivo actions loading.action\n    case actionTypes.CHANGE:\n        //return pega o estado atual e mescla com payload\n        return { ...state, ...payload }\n\n    default:\n        return state\n    }\n}\n\n","/opt/lampp/htdocs/carcrm-react/src/store/actions/loading.action.js",[],"/opt/lampp/htdocs/carcrm-react/src/view/components/index.js",[],"/opt/lampp/htdocs/carcrm-react/src/view/components/Loading.js",["110"],"//O COMANDO RFC CRIA A ESTRUTURA DO COMPONENTE AUTOMATICAMENTE\n\nimport React from 'react'\n//componentes importados do material ui\nimport { Typography, Modal, CircularProgress} from '@material-ui/core'\n\nimport { changeLoading } from '../../store/actions/loading.action';\n\n\n//imporysnfo hooks do react redux\nimport { useSelector, useDispatch } from 'react-redux'\nimport loadingReducer from '../../store/reducers/loading.reducer';\n\nexport default function Loading() {\n    //use dispacth dispara actions\n    const dispatch = useDispatch();\n    //pega estado inicial open e msg\n    //state é um objeto com todo estado da aplicação por isso escolho o estado somente do loadingReducer\n    //use selector faz pegar os estados de quem estiver no rootReducer\n    const loading = useSelector(state => state.loadingReducer);\n    return (\n        // open é o valor inicial do loadingReducer que é igual a true\n       <Modal\n         open={loading.open}\n        //  quando chamo changeLoading estou chamando uma function do loading reducer\n        // que altera o estado de acordo com as propriedades passadas como parametro\n        // essa funcao é uma action que esta na pasta actions e é importada no loading.reducer\n        // por ser action é disparado como dispatch\n         onClose={() => dispatch( changeLoading({open:false}) )}\n         //classes do bootstrap\n         className=\"d-flex justify-content-center align-items-center h-100\"\n       >\n        <div className=\"bg-white d-flex align-items-center rounded-lg p-3\">\n            {/* circular progress importado do material ui */}\n            <CircularProgress size={20} className=\"mr-3\"/>\n            {/* typograpy é para colocar a mensagem, variant é o tipo da font (h1, h2, title)\n            tem na doc do material UI */}\n            <Typography variant=\"subtitle1\">{loading.msg}</Typography>\n        </div>\n       </Modal>\n    )\n}\n","/opt/lampp/htdocs/carcrm-react/src/store/reducers/notify.reducer.js",["111"],"\nimport {actionTypes} from '../actions/notify.action';\n\nconst initialState = {\n    //primeiro estado é o open para mostrar se o componente está aberto ou fechado\n    open: false,\n    //o parametro inicial para horizontal é center\n    horizontal: 'center',\n    vertical: 'top',\n    class: 'success',\n    //tempo aberto\n    time: 3000,\n    msg: ''\n}\n\n//criada com rxreducer                //PAYLOAD é o estado que vou passar para mesclar com o inicial\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case actionTypes.CHANGE:   //PAYLOAD é o estado que vou passar para mesclar com o estado inicial\n        return { ...state, ...payload }\n\n    default:\n        return state\n    }\n}\n","/opt/lampp/htdocs/carcrm-react/src/store/actions/notify.action.js",[],"/opt/lampp/htdocs/carcrm-react/src/view/components/Notify.js",[],"/opt/lampp/htdocs/carcrm-react/src/store/reducers/alert.reducer.js",["112"],"import { actionTypes } from '../actions/alert.action';\n\n\nconst initialState = {\n    open: false,\n    class: 'success',\n    time: 3000,\n    msg: ''\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case actionTypes.CHANGE:\n        return { ...state, ...payload }\n\n    default:\n        return state\n    }\n}\n","/opt/lampp/htdocs/carcrm-react/src/view/components/Alert.js",[],"/opt/lampp/htdocs/carcrm-react/src/store/actions/alert.action.js",[],"/opt/lampp/htdocs/carcrm-react/src/store/reducers/alertr.reducer.js",["113"],"import { actionTypes } from '../actions/alertr.action';\n\nconst initialState = {\n    open: false,\n    class: 'success',\n    msg: '',\n    time:3000\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    case actionTypes.CHANGE:\n        return { ...state, ...payload }\n\n    default:\n        return state\n    }\n}\n","/opt/lampp/htdocs/carcrm-react/src/store/actions/alertr.action.js",[],"/opt/lampp/htdocs/carcrm-react/src/view/components/Alertr.js",[],"/opt/lampp/htdocs/carcrm-react/src/view/components/Confirm.js",[],"/opt/lampp/htdocs/carcrm-react/src/view/auth/index.js",[],"/opt/lampp/htdocs/carcrm-react/src/store/reducers/auth.reducer.js",["114"],"/opt/lampp/htdocs/carcrm-react/src/store/actions/auth.action.js",[],"/opt/lampp/htdocs/carcrm-react/src/config/Http.js",[],"/opt/lampp/htdocs/carcrm-react/src/config/App.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":29,"column":42,"nodeType":"121","messageId":"122","endLine":29,"endColumn":49},{"ruleId":"119","severity":1,"message":"123","line":2,"column":26,"nodeType":"121","messageId":"122","endLine":2,"endColumn":30},{"ruleId":"124","severity":1,"message":"125","line":16,"column":1,"nodeType":"126","endLine":27,"endColumn":2},{"ruleId":"119","severity":1,"message":"127","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":22},{"ruleId":"124","severity":1,"message":"125","line":17,"column":1,"nodeType":"126","endLine":26,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":11,"column":1,"nodeType":"126","endLine":20,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":10,"column":1,"nodeType":"126","endLine":19,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":12,"column":1,"nodeType":"126","endLine":33,"endColumn":2},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Confirm' is defined but never used.","Identifier","unusedVar","'lazy' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'loadingReducer' is defined but never used.","no-global-assign","no-unsafe-negation"]